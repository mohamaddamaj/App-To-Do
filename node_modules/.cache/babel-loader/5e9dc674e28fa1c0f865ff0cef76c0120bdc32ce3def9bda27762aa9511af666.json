{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React\\\\REACT\\\\01-starting-setup\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [taskText, setTaskText] = useState(\"\");\n  const [filter, setFilter] = useState(\"all\"); // 'all', 'active', 'completed'\n\n  const addTask = () => {\n    if (taskText.trim() !== \"\") {\n      setTasks([...tasks, {\n        text: taskText,\n        completed: false\n      }]);\n      setTaskText(\"\");\n    }\n  };\n  const toggleTask = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  };\n  const deleteTask = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === \"active\") {\n      return !task.completed;\n    } else if (filter === \"completed\") {\n      return task.completed;\n    }\n    return true; // 'all'\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Things \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a task...\",\n        value: taskText,\n        onChange: e => setTaskText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter(\"all\"),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter(\"active\"),\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter(\"completed\"),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleTask(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: task.completed ? \"completed\" : \"\",\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GpKGuS3DaL3fJ+XJM/yj1nNZX4w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","taskText","setTaskText","filter","setFilter","addTask","trim","text","completed","toggleTask","index","updatedTasks","deleteTask","splice","filteredTasks","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","checked","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/React/REACT/01-starting-setup/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [taskText, setTaskText] = useState(\"\");\n  const [filter, setFilter] = useState(\"all\"); // 'all', 'active', 'completed'\n\n  const addTask = () => {\n    if (taskText.trim() !== \"\") {\n      setTasks([...tasks, { text: taskText, completed: false }]);\n      setTaskText(\"\");\n    }\n  };\n\n  const toggleTask = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n  };\n\n  const deleteTask = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks.splice(index, 1);\n    setTasks(updatedTasks);\n  };\n\n  const filteredTasks = tasks.filter((task) => {\n    if (filter === \"active\") {\n      return !task.completed;\n    } else if (filter === \"completed\") {\n      return task.completed;\n    }\n    return true; // 'all'\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Things </h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Add a task...\"\n          value={taskText}\n          onChange={(e) => setTaskText(e.target.value)}\n        />\n        <button onClick={addTask}>Add</button>\n      </div>\n      <div>\n        <button onClick={() => setFilter(\"all\")}>All</button>\n        <button onClick={() => setFilter(\"active\")}>Active</button>\n        <button onClick={() => setFilter(\"completed\")}>Completed</button>\n      </div>\n      <ul>\n        {filteredTasks.map((task, index) => (\n          <li key={index}>\n            <input\n              type=\"checkbox\"\n              checked={task.completed}\n              onChange={() => toggleTask(index)}\n            />\n            <span className={task.completed ? \"completed\" : \"\"}>\n              {task.text}\n            </span>\n            <button onClick={() => deleteTask(index)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7C,MAAMW,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIJ,QAAQ,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BN,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAEQ,IAAI,EAAEN,QAAQ;QAAEO,SAAS,EAAE;MAAM,CAAC,CAAC,CAAC;MAC1DN,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;EAED,MAAMO,UAAU,GAAIC,KAAK,IAAK;IAC5B,MAAMC,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAAC;IAC/BY,YAAY,CAACD,KAAK,CAAC,CAACF,SAAS,GAAG,CAACG,YAAY,CAACD,KAAK,CAAC,CAACF,SAAS;IAC9DR,QAAQ,CAACW,YAAY,CAAC;EACxB,CAAC;EAED,MAAMC,UAAU,GAAIF,KAAK,IAAK;IAC5B,MAAMC,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAAC;IAC/BY,YAAY,CAACE,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IAC7BV,QAAQ,CAACW,YAAY,CAAC;EACxB,CAAC;EAED,MAAMG,aAAa,GAAGf,KAAK,CAACI,MAAM,CAAEY,IAAI,IAAK;IAC3C,IAAIZ,MAAM,KAAK,QAAQ,EAAE;MACvB,OAAO,CAACY,IAAI,CAACP,SAAS;IACxB,CAAC,MAAM,IAAIL,MAAM,KAAK,WAAW,EAAE;MACjC,OAAOY,IAAI,CAACP,SAAS;IACvB;IACA,OAAO,IAAI,CAAC,CAAC;EACf,CAAC,CAAC;;EAEF,oBACEZ,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBrB,OAAA;MAAAqB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBzB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QACE0B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,eAAe;QAC3BC,KAAK,EAAEvB,QAAS;QAChBwB,QAAQ,EAAGC,CAAC,IAAKxB,WAAW,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFzB,OAAA;QAAQgC,OAAO,EAAEvB,OAAQ;QAAAY,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNzB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAMxB,SAAS,CAAC,KAAK,CAAE;QAAAa,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrDzB,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAMxB,SAAS,CAAC,QAAQ,CAAE;QAAAa,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3DzB,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAMxB,SAAS,CAAC,WAAW,CAAE;QAAAa,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC,eACNzB,OAAA;MAAAqB,QAAA,EACGH,aAAa,CAACe,GAAG,CAAC,CAACd,IAAI,EAAEL,KAAK,kBAC7Bd,OAAA;QAAAqB,QAAA,gBACErB,OAAA;UACE0B,IAAI,EAAC,UAAU;UACfQ,OAAO,EAAEf,IAAI,CAACP,SAAU;UACxBiB,QAAQ,EAAEA,CAAA,KAAMhB,UAAU,CAACC,KAAK;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACFzB,OAAA;UAAMoB,SAAS,EAAED,IAAI,CAACP,SAAS,GAAG,WAAW,GAAG,EAAG;UAAAS,QAAA,EAChDF,IAAI,CAACR;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACPzB,OAAA;UAAQgC,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACF,KAAK,CAAE;UAAAO,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GATlDX,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACvB,EAAA,CAnEQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}